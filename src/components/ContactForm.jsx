import React, { useState } from 'react';
import { useForm } from 'react-hook-form';
import axios from 'axios';
import ReCAPTCHA from 'react-google-recaptcha';

function ContactForm() {
  const { register, handleSubmit, reset } = useForm();
  const [captchaToken, setCaptchaToken] = useState(null);
  const [message, setMessage] = useState('');

  const onSubmit = async (data) => {
    if (!captchaToken) {
      setMessage('–û—à–∏–±–∫–∞: –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –Ω–µ —Ä–æ–±–æ—Ç.');
      return;
    }

    try {
      const response = await axios.post('http://localhost:5000/contact', {
        ...data,
        captchaToken, // üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–ø—á—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      });

      setMessage(response.data.message);
      reset();
      setCaptchaToken(null);
    } catch (error) {
      setMessage('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      console.error('–û—à–∏–±–∫–∞:', error);
    }
  };

  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <label>–ò–º—è:</label>
      <input {...register('name', { required: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è' })} type="text" placeholder="–í–∞—à–µ –∏–º—è" />
      
      <label>Email:</label>
      <input {...register('email', { required: '–í–≤–µ–¥–∏—Ç–µ email' })} type="email" placeholder="–í–∞—à email" />
      
      <label>–°–æ–æ–±—â–µ–Ω–∏–µ:</label>
      <textarea {...register('message', { required: '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ' })} placeholder="–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"></textarea>
      
      <ReCAPTCHA
        sitekey="6LdgHscqAAAAAKZNCIINSjBt_7_viG7qN1LSyySA" // üîπ –í—Å—Ç–∞–≤—å—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á reCAPTCHA
        onChange={setCaptchaToken}
        onExpired={() => setCaptchaToken(null)}
      />
      
      <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
      {message && <p>{message}</p>}
    </form>
  );
}

export default ContactForm;
